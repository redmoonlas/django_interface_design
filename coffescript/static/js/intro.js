// Generated by CoffeeScript 1.9.2
(function() {
  var Game, RensonsiveCanvas, startGame,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  RensonsiveCanvas = (function() {
    function RensonsiveCanvas(selector) {
      this.resize = bind(this.resize, this);
      this.canvas_ref = $(selector);
      this.canvas = this.canvas_ref.get(0);
      this.context = this.canvas.getContext('2d');
      this.resize();
      window.addEventListener('resize', this.resize);
    }

    RensonsiveCanvas.prototype.resize = function() {
      var container;
      container = $(this.canvas_ref).parent();
      this.canvas_ref.attr('width', $(container).width());
      return this.canvas_ref.attr('height', $(container).height());
    };

    return RensonsiveCanvas;

  })();

  Game = (function(superClass) {
    extend(Game, superClass);

    function Game() {
      this.mainloop = bind(this.mainloop, this);
      Game.__super__.constructor.call(this, '#chart');
      this.context.font = "20px Calibri";
      this.context.textAlign = "center";
      this.loopindex = 0;
      window.setInterval(this.mainloop, 200);
    }

    Game.prototype.updateCanvas = function() {
      return this.loopindex = this.loopindex + 1;
    };

    Game.prototype.drawCanvas = function() {
      this.context.fillStyle = this.loopindex % 2 ? 'yellow' : 'blue';
      this.context.fillRect(0, 0, this.canvas.width, this.canvas.height);
      this.context.fillStyle = "#333333";
      return this.context.fillText("Canvas width: " + this.canvas.width + " px", this.canvas.width / 2, this.canvas.height / 2);
    };

    Game.prototype.mainloop = function() {
      this.updateCanvas();
      return this.drawCanvas();
    };

    return Game;

  })(RensonsiveCanvas);

  startGame = function() {
    return new Game;
  };

  document.addEventListener('DOMContentLoaded', startGame);

}).call(this);
